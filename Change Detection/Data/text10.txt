Generate some large amount text to fill the file
The quick brown fox jumps over the lazy dog.
The five boxing wizards jump quickly.
          file_hash_table["hash"] = hash
          file_hash_table["createdAt"] = FileOperations.get_date_time()
          file_array.add(file_hash_table)

      return file_array


import os
import strutils
import tables
import hashutils
import nimcrypto
import FileOperations
proc hash_data(path: string): string =
  var ctx = newSha256()
  ctx.update(path)
  let digest = ctx.finish()
  result = toHex(digest.data, lowercase = true)
proc process_file_paths(path: string): (seq[string], seq[string]) =
  let file_paths = FileOperations.get_all_files(path, true)
  var hashes: seq[string] = @[]
  var created_at: seq[string] = @[]
  for file in file_paths:
    hashes.add(hash_data(file))
    created_at.add(FileOperations.get_date_time())
  return (hashes, created_at)
proc hash_files(path: string): seq[Table[string, string]] =
  var (files_path, new_path) = process_file_paths(path)
    var file_array: seq[Table[string, string]]
    for idx, path in files_path:
      var file_hash_table = initTable[string, string]()
      file_hash_table["path"] = path
      file_hash_table["hash"] = hashes[idx]
      file_hash_table["createdAt"] = created_at[idx]
      file_array.add(file_hash_table)

    return file_array
